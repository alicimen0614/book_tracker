///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class TrendingBooksWorksAvailability {
/*
{
  "status": "borrow_available",
  "available_to_browse": true,
  "available_to_borrow": false,
  "available_to_waitlist": false,
  "is_printdisabled": true,
  "is_readable": false,
  "is_lendable": true,
  "is_previewable": true,
  "identifier": "spinozaofmarkets0000sing",
  "isbn": null,
  "oclc": null,
  "openlibrary_work": "OL1345093W",
  "openlibrary_edition": "OL5826163M",
  "last_loan_date": null,
  "num_waitlist": null,
  "last_waitlist_date": null,
  "is_restricted": true,
  "is_browseable": true,
  "__src__": "core.models.lending.get_availability"
} 
*/

  String? status;
  bool? availableToBrowse;
  bool? availableToBorrow;
  bool? availableToWaitlist;
  bool? isPrintdisabled;
  bool? isReadable;
  bool? isLendable;
  bool? isPreviewable;
  String? identifier;
  String? isbn;
  String? oclc;
  String? openlibraryWork;
  String? openlibraryEdition;
  String? lastLoanDate;
  String? numWaitlist;
  String? lastWaitlistDate;
  bool? isRestricted;
  bool? isBrowseable;

  TrendingBooksWorksAvailability({
    this.status,
    this.availableToBrowse,
    this.availableToBorrow,
    this.availableToWaitlist,
    this.isPrintdisabled,
    this.isReadable,
    this.isLendable,
    this.isPreviewable,
    this.identifier,
    this.isbn,
    this.oclc,
    this.openlibraryWork,
    this.openlibraryEdition,
    this.lastLoanDate,
    this.numWaitlist,
    this.lastWaitlistDate,
    this.isRestricted,
    this.isBrowseable,
  });
  TrendingBooksWorksAvailability.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    availableToBrowse = json['available_to_browse'];
    availableToBorrow = json['available_to_borrow'];
    availableToWaitlist = json['available_to_waitlist'];
    isPrintdisabled = json['is_printdisabled'];
    isReadable = json['is_readable'];
    isLendable = json['is_lendable'];
    isPreviewable = json['is_previewable'];
    identifier = json['identifier']?.toString();
    isbn = json['isbn']?.toString();
    oclc = json['oclc']?.toString();
    openlibraryWork = json['openlibrary_work']?.toString();
    openlibraryEdition = json['openlibrary_edition']?.toString();
    lastLoanDate = json['last_loan_date']?.toString();
    numWaitlist = json['num_waitlist']?.toString();
    lastWaitlistDate = json['last_waitlist_date']?.toString();
    isRestricted = json['is_restricted'];
    isBrowseable = json['is_browseable'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['available_to_browse'] = availableToBrowse;
    data['available_to_borrow'] = availableToBorrow;
    data['available_to_waitlist'] = availableToWaitlist;
    data['is_printdisabled'] = isPrintdisabled;
    data['is_readable'] = isReadable;
    data['is_lendable'] = isLendable;
    data['is_previewable'] = isPreviewable;
    data['identifier'] = identifier;
    data['isbn'] = isbn;
    data['oclc'] = oclc;
    data['openlibrary_work'] = openlibraryWork;
    data['openlibrary_edition'] = openlibraryEdition;
    data['last_loan_date'] = lastLoanDate;
    data['num_waitlist'] = numWaitlist;
    data['last_waitlist_date'] = lastWaitlistDate;
    data['is_restricted'] = isRestricted;
    data['is_browseable'] = isBrowseable;
    return data;
  }
}

class TrendingBooksWorks {
/*
{
  "key": "/works/OL1345093W",
  "title": "The Spinoza of Market Street",
  "edition_count": 11,
  "first_publish_year": 1958,
  "has_fulltext": true,
  "public_scan_b": false,
  "ia": [
    "spinozaofmarkets0000sing"
  ],
  "ia_collection_s": "inlibrary;internetarchivebooks;printdisabled;trent_university",
  "lending_edition_s": "OL5826163M",
  "lending_identifier_s": "spinozaofmarkets0000sing",
  "cover_edition_key": "OL5826163M",
  "cover_i": 9865410,
  "language": [
    "eng"
  ],
  "author_key": [
    "OL137147A"
  ],
  "author_name": [
    "Isaac Bashevis Singer"
  ],
  "availability": {
    "status": "borrow_available",
    "available_to_browse": true,
    "available_to_borrow": false,
    "available_to_waitlist": false,
    "is_printdisabled": true,
    "is_readable": false,
    "is_lendable": true,
    "is_previewable": true,
    "identifier": "spinozaofmarkets0000sing",
    "isbn": null,
    "oclc": null,
    "openlibrary_work": "OL1345093W",
    "openlibrary_edition": "OL5826163M",
    "last_loan_date": null,
    "num_waitlist": null,
    "last_waitlist_date": null,
    "is_restricted": true,
    "is_browseable": true,
    "__src__": "core.models.lending.get_availability"
  }
} 
*/

  String? key;
  String? title;
  int? editionCount;
  int? firstPublishYear;
  bool? hasFulltext;
  bool? publicScanB;
  List<String?>? ia;
  String? iaCollectionS;
  String? lendingEditionS;
  String? lendingIdentifierS;
  String? coverEditionKey;
  int? coverI;
  List<String?>? language;
  List<String?>? authorKey;
  List<String?>? authorName;
  TrendingBooksWorksAvailability? availability;

  TrendingBooksWorks({
    this.key,
    this.title,
    this.editionCount,
    this.firstPublishYear,
    this.hasFulltext,
    this.publicScanB,
    this.ia,
    this.iaCollectionS,
    this.lendingEditionS,
    this.lendingIdentifierS,
    this.coverEditionKey,
    this.coverI,
    this.language,
    this.authorKey,
    this.authorName,
    this.availability,
  });
  TrendingBooksWorks.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    title = json['title']?.toString();
    editionCount = json['edition_count']?.toInt();
    firstPublishYear = json['first_publish_year']?.toInt();
    hasFulltext = json['has_fulltext'];
    publicScanB = json['public_scan_b'];
    if (json['ia'] != null) {
      final v = json['ia'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      ia = arr0;
    }
    iaCollectionS = json['ia_collection_s']?.toString();
    lendingEditionS = json['lending_edition_s']?.toString();
    lendingIdentifierS = json['lending_identifier_s']?.toString();
    coverEditionKey = json['cover_edition_key']?.toString();
    coverI = json['cover_i']?.toInt();
    if (json['language'] != null) {
      final v = json['language'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      language = arr0;
    }
    if (json['author_key'] != null) {
      final v = json['author_key'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      authorKey = arr0;
    }
    if (json['author_name'] != null) {
      final v = json['author_name'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      authorName = arr0;
    }
    availability = (json['availability'] != null)
        ? TrendingBooksWorksAvailability.fromJson(json['availability'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['title'] = title;
    data['edition_count'] = editionCount;
    data['first_publish_year'] = firstPublishYear;
    data['has_fulltext'] = hasFulltext;
    data['public_scan_b'] = publicScanB;
    if (ia != null) {
      final v = ia;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['ia'] = arr0;
    }
    data['ia_collection_s'] = iaCollectionS;
    data['lending_edition_s'] = lendingEditionS;
    data['lending_identifier_s'] = lendingIdentifierS;
    data['cover_edition_key'] = coverEditionKey;
    data['cover_i'] = coverI;
    if (language != null) {
      final v = language;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['language'] = arr0;
    }
    if (authorKey != null) {
      final v = authorKey;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['author_key'] = arr0;
    }
    if (authorName != null) {
      final v = authorName;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['author_name'] = arr0;
    }
    if (availability != null) {
      data['availability'] = availability!.toJson();
    }
    return data;
  }
}

class TrendingBooks {
/*
{
  "query": "/trending/now",
  "works": [
    {
      "key": "/works/OL1345093W",
      "title": "The Spinoza of Market Street",
      "edition_count": 11,
      "first_publish_year": 1958,
      "has_fulltext": true,
      "public_scan_b": false,
      "ia": [
        "spinozaofmarkets0000sing"
      ],
      "ia_collection_s": "inlibrary;internetarchivebooks;printdisabled;trent_university",
      "lending_edition_s": "OL5826163M",
      "lending_identifier_s": "spinozaofmarkets0000sing",
      "cover_edition_key": "OL5826163M",
      "cover_i": 9865410,
      "language": [
        "eng"
      ],
      "author_key": [
        "OL137147A"
      ],
      "author_name": [
        "Isaac Bashevis Singer"
      ],
      "availability": {
        "status": "borrow_available",
        "available_to_browse": true,
        "available_to_borrow": false,
        "available_to_waitlist": false,
        "is_printdisabled": true,
        "is_readable": false,
        "is_lendable": true,
        "is_previewable": true,
        "identifier": "spinozaofmarkets0000sing",
        "isbn": null,
        "oclc": null,
        "openlibrary_work": "OL1345093W",
        "openlibrary_edition": "OL5826163M",
        "last_loan_date": null,
        "num_waitlist": null,
        "last_waitlist_date": null,
        "is_restricted": true,
        "is_browseable": true,
        "__src__": "core.models.lending.get_availability"
      }
    }
  ],
  "days": 0,
  "hours": 0
} 
*/

  String? query;
  List<TrendingBooksWorks?>? works;
  int? days;
  int? hours;

  TrendingBooks({
    this.query,
    this.works,
    this.days,
    this.hours,
  });
  TrendingBooks.fromJson(Map<String, dynamic> json) {
    query = json['query']?.toString();
    if (json['works'] != null) {
      final v = json['works'];
      final arr0 = <TrendingBooksWorks>[];
      v.forEach((v) {
        arr0.add(TrendingBooksWorks.fromJson(v));
      });
      works = arr0;
    }
    days = json['days']?.toInt();
    hours = json['hours']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['query'] = query;
    if (works != null) {
      final v = works;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['works'] = arr0;
    }
    data['days'] = days;
    data['hours'] = hours;
    return data;
  }
}
